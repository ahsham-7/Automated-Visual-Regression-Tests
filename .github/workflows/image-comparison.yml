name: Image Comparison Tests and Deploy

on:
  workflow_dispatch:  # Trigger manually through GitHub Actions UI

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Match your projectâ€™s Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Install Chrome and set permissions for wdio
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      - name: Make wdio executable
        run: chmod +x ./node_modules/.bin/wdio

      # Step 5: Run WebdriverIO Tests and Generate Report
      - name: Run WebdriverIO Tests
        run: npm run test  # Run your image comparison tests
        continue-on-error: true  # Allow deployment step to run even if tests fail

      # Step 6: Generate the report (This should overwrite the existing index.html file)
      - name: Generate HTML Report
        run: node ./reports/generateReport.js  # Path to report generation script
      
      - name: Check if index.html exists
        run: ls -al ./reports/
        
      # Step 7: Ensure index.html is updated
      - name: Ensure index.html is updated
        run: |
          mkdir -p gh-pages  # Ensure gh-pages directory exists
          cp ./reports/index.html ./gh-pages/index.html  # Make sure the latest index.html is in gh-pages

      # Step 8: Prepare files for deployment to GitHub Pages
      - name: Prepare files for deployment
        run: |
          mkdir -p gh-pages/images/baseline/desktop_chrome/${sanitizedTestSuite}
          mkdir -p gh-pages/images/actual/desktop_chrome/${sanitizedTestSuite}
          mkdir -p gh-pages/images/diff/desktop_chrome/${sanitizedTestSuite}
          cp -R ./baseLineImages/desktop_chrome/${sanitizedTestSuite}/* ./gh-pages/images/baseline/desktop_chrome/${sanitizedTestSuite}/
          cp -R ./actualImages/actual/desktop_chrome/${sanitizedTestSuite}/* ./gh-pages/images/actual/desktop_chrome/${sanitizedTestSuite}/
          cp -R ./actualImages/diff/desktop_chrome/${sanitizedTestSuite}/* ./gh-pages/images/diff/desktop_chrome/${sanitizedTestSuite}/

      # Step 9: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: always()  # Ensures deployment runs regardless of test outcome
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # Branch for HTML report and images
          folder: gh-pages  # Path to the deployment folder
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the default GitHub Actions token for deployment
